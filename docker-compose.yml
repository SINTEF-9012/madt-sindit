version: '2.4'

networks:
  # Required for the devcontainer
  sindit_network:
    name: sindit_network

services:
  sindit_influx_db:
    extends:
      file: docker-compose.databases.yml
      service: sindit_influx_db
    networks:
      - sindit_network
    ports:
      - '8087:8086'

  sindit_neo4j_kg:
    extends:
      file: docker-compose.databases.yml
      service: sindit_neo4j_kg
    networks:
      - sindit_network
    ports:
      - 7475:7474
      - 7688:7687

  sindit_minio_s3:
    extends:
      file: docker-compose.databases.yml
      service: sindit_minio_s3
    networks:
      - sindit_network
    ports:
      - "9000:9000"
      - "9099:9099"

  sindit_dt_backend:
    build: .
    hostname: sindit-dt-backend
    container_name: sindit_dt_backend
    mem_limit: 6G
    env_file:
      - "environment_and_configuration/deployment_environment_backend.env"
    ports:
      - 8000:8000
    networks:
      - sindit_network
    depends_on:
      sindit_influx_db:
        condition: service_healthy
      sindit_neo4j_kg:
        condition: service_healthy
    healthcheck:
      test: curl localhost:8000/graph/machines_deep
      interval: 10s
      timeout: 10s
      retries: 5
    entrypoint: python dt_backend.py
    extra_hosts:
      - "host.docker.internal:host-gateway"

  sindit_dt_frontend:
    build: .
    hostname: sindit-dt-frontend
    container_name: sindit_dt_frontend
    mem_limit: 4G
    env_file:
      - "environment_and_configuration/deployment_environment_frontend.env"
    ports:
      - 8050:8050
    networks:
      - sindit_network
    depends_on:
      sindit_influx_db:
        condition: service_healthy
      sindit_neo4j_kg:
        condition: service_healthy
      sindit_dt_backend:
        condition: service_healthy
    healthcheck:
      test: curl localhost:8050
      interval: 10s
      timeout: 10s
      retries: 5
    entrypoint: python dt_frontend.py
